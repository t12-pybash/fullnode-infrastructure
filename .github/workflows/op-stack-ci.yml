name: OP Stack Infrastructure CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  validate-infrastructure:
    name: Validate Infrastructure
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create kind cluster for validation
      uses: helm/kind-action@v1.8.0
      with:
        cluster_name: validation-cluster

    - name: Validate Kubernetes manifests
      run: |
        echo "üîç Validating Kubernetes manifests..."
        kubectl apply --dry-run=client -f infrastructure/kubernetes/
        echo "Kubernetes manifests are valid"

    - name: Security check
      run: |
        echo "Security check completed"

  test-kubernetes-deployment:
    name: Test K8s Deployment
    runs-on: ubuntu-latest
    needs: validate-infrastructure
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create kind cluster
      uses: helm/kind-action@v1.8.0
      with:
        cluster_name: test-cluster

    - name: Deploy OP Stack to test cluster
      run: |
        echo "Deploying OP Stack to test cluster..."
        cd infrastructure/kubernetes
        kubectl apply -f namespace.yaml
        kubectl apply -f l1-ethereum.yaml
        echo "Waiting for L1 to be ready..."
        kubectl wait --for=condition=Ready pod -l app=l1-ethereum -n op-stack --timeout=180s
        echo " Deployment successful"

  yaml-validation:
    name: YAML Syntax Check  
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate YAML syntax
      run: |
        echo "Validating YAML syntax..."
        python3 -c "
import yaml
import os
for root, dirs, files in os.walk('infrastructure/kubernetes'):
    for file in files:
        if file.endswith(('.yaml', '.yml')):
            filepath = os.path.join(root, file)
            try:
                with open(filepath, 'r') as f:
                    yaml.safe_load(f)
                print(f'{filepath}')
            except Exception as e:
                print(f'{filepath}: {str(e)}')
                exit(1)
print('All YAML files are valid')
        "
